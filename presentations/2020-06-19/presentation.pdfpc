[font_size]
34
[notes]
### 1
Welkom

Meer vertellen

Test Prioritering

### 2
Kort structuur

Probleem bespreken

### 3
Bestaande oplossingen

### 4
Eigen implementatie

### 5
Effect op bestaande

### 6
Demo

### 7
Eerst en vooral

### 8
Wat?

Afkorting CI

### 9
Voorbeeld

Bedrijf Android

### 10
Werknemer

CI service op server

### 11
Meerdere keren per dag

Sync met werknemers

Integreren

### 12
Checks (Stijl, Compileer)

Tests

### 13
Tests

### 14
Falen of Slagen

### 15
Weet waar is probleem?

Oplossen

### 16
Ofwel slagen

### 17
Automatisch Play Store

Nieuwste versie

### 18
Wat is probleem?

### 19
In tests

### 20
Begin

Weinig functionaliteit

Weinig tests

### 21
Tijd verstrijkt

### 22
Meer functionaliteit

Meer tests nodig

Duurt langer [TODO PLAATS TIJD]

### 23
Wat aan doen?

Drie oplossingen

### 24
Test Selectie

### 25
Beschouw tests

Analyseer veranderingen

### 26
Welke beinvloed?

### 27
Test Minimalisatie

### 28
Neem tests

### 29
Voer alles uit

Wanneer tevreden

Permanent

Verschil met Selectie

### 30
Prioritering

### 31
Vorige technieken

Medische software

Belangrijk alles uitvoeren

Neem alle tests

### 32
Voer allemaal uit

Volgorde

Snel falen

Ontwikkelaar weet waar fout [5M]

### 33
Voila

### 34
Of niet

### 35
Theorie

Ander paar mouwen

### 36
Wat bestaat?

### 37
Java

Clover

Vrij goed

Niet aanpasbaar

### 38
Andere talen

Wel ja

### 39
Naadloos

### 40
3 componenten

Uniforme interface

Apart ontwikkelen

### 41
Agent

### 42
Controller

### 43
Tenslotte

### 44
Bespreken

Agent

### 45
Ingeplugd in tests

Dus Taal afhankelijk

Twee taken

Volgorde uitvoeren (predictor)

### 46
Daarnaast

Feedback over uitvoering

### 47
Controller

### 48
Agent / Predictor zijn onafh.

Koppelen

### 49
Verwerk resultaten agent

Performantie volgende runs

### 50
Predictor

### 51
Volgorde Falen

### 52
10 Algoritmes

Elk eigen volgorde genereren

### 53
Uitbreidbaar

Interface

Voorbeeld [9M]

### 54
Een van 10

Alpha

Zelf gemaakt

Combineer andere

### 55
Code aangepast

Onlangs gefaald (2 vorige)

### 56
Code aangepast

### 57
Overblijvende tests

Nog niet geteste lijnen

### 58
Elke lijn getest

Redundant

Toch uitvoeren [10M]

### 59
Aandachtige luisteraar

10 algoritmes

10 volgordes

### 60
Hoe weten?

### 61
Meta predictor

### 62
Eenvoudige tabel

Score per algo

Controller verhoogt als goed

Machine Learning

### 63
Weten hoe

Kijken hoe goed

### 64
Dodona UGent

Aantal tests tot faal

Grijs origineel

Rood Alpha

25 keer

### 65
Tijd

Grafiek gelijkaardig

40 keer

### 66
Demo

### 67
Samengevat

### 68
Tests goed

Fouten detecteren

Eindgebruikers

### 69
Veel tests

Probleem

Traag feedback

### 70
Oplossen

Test Prioritering

Rangschikken

Snel falen

### 71
Resultaat

Wachten daalt

Productiviteit stijgt

### 72
Was presentatie

Eventuele vragen

